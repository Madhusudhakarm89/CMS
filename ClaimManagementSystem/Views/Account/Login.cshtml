@using CaptchaMvc.HtmlHelpers
@using CaptchaMvc;

@model LoginViewModel


@{
    ViewBag.Title = "Log in";
    
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}
<div id="LoginContainer">
    <section id="UserLogin" class="col-xs-12">
        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "loginForm", role = "form" }))
        {
            @Html.AntiForgeryToken()
            
            <div class="form-group col-xs-12 text-left">
                    @Html.DisplayNameFor(m => m.Email)
                    @(Html.Kendo().TextBoxFor(m => m.Email).HtmlAttributes(new { @class = "form-control", maxlength = "200" }))
                    @Html.ValidationMessageFor(m => m.Email)
            </div>
            <div class="form-group col-xs-12 text-left">
                @Html.DisplayNameFor(m => m.Password)
                @(Html.Kendo().TextBoxFor(m => m.Password).HtmlAttributes(new { type = "password", @class = "form-control password", maxlength = "100" }))
                @Html.ValidationMessageFor(m => m.Password)
            </div>
            <div class="form-group col-xs-12 col-md-12 text-left">
                @(Html.Kendo().CheckBoxFor(m => m.RememberMe))
            </div>
            <div class="form-group col-xs-12 col-md-12 text-right">
                @(Html.Kendo().Button().Name("Login").HtmlAttributes(new { type = "submit", @class = "pull-right" }).Content("Log in"))
            </div>

            if (ViewData["ShowCaptcha"] != null && Convert.ToBoolean(ViewData["ShowCaptcha"]))
            {
                <div class="form-group col-xs-12 text-left">
                    @Html.MathCaptcha()
                </div>
            }

            <div class="form-group col-xs-12 text-center" id="messageContainer">
                @if (!ViewData.ModelState.IsValid)
                {
                    <span>
                        @Html.ValidationMessage("InvalidLogin", new { id = "validationMessage" })
                    </span>
                }
            </div>
            <div class="form-group col-xs-12 loginFormFooter">
                @Html.ActionLink("Forgot password?", "ForgotPassword", "Account", null, new { Area = string.Empty, id = "forgotPassword"})
            </div>
        }
    </section>
</div>
<div id="ForgotPasswordContainer"></div>

<script type="text/javascript">
    $(function () {

        $(".loginForm").slideDown("fast");
        $("#messageContainer span").delay(20000).fadeOut("slow", function () { $(this).remove(); });


        $("#forgotPassword").on("click", function (e) {
            e.preventDefault();

            $("#loginForm").find("input.form-control").each(function () {
                $(this).val("").clearErrors();
                $(this).next("span").empty().clearErrors();
            });

            if ($("#loginForm #validationMessage").length > 0) {
                $("#loginForm #validationMessage").empty().clearErrors();
            }

            var response = ProcessAjaxRequest(PageNavigationUrl.Account.ForgotPassword, HttpRequestMethod.GET, HttpRequestDataType.HTML, HttpRequestContentType.HTML, null, null);
            if (response) {

                $("#ForgotPasswordContainer").empty().html(response);
                $.validator.unobtrusive.parse($("#ForgotPasswordContainer form:first"));
                $("#ForgotPasswordContainer form:first").validate(); // start validating

                $("#UserLogin, #Confirm").slideUp();
                $("#Forgot").slideDown("fast");
            }
        });
    });
</script>