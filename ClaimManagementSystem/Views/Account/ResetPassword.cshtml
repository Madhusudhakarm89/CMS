@model ResetPasswordViewModel
@{
    ViewBag.Title = "Reset Password";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

<div id="ResetPasswordContainer">
    <section id="ResetPassword" class="col-xs-12">
        @using (Html.BeginForm(null, null, new { code = Model.Code }, FormMethod.Post, new { id = "resetForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Code)
            @Html.HiddenFor(m => m.UserId)

            <div class="form-group col-xs-12 loginFormHeader">
                <section class="paddingBottom20 text-left">
                    Reset Password
                </section>
            </div>
            <div class="form-group col-xs-12 text-left paddingBottom20">
                @Html.DisplayNameFor(m => m.Password)
                @Html.Kendo().TextBoxFor(m => m.Password).HtmlAttributes(new { type = "password", @class = "form-control password", maxlength = "100" })
                @Html.ValidationMessageFor(m => m.Password)
            </div>
            <div class="form-group col-xs-12 text-left paddingBottom20">
                @Html.DisplayNameFor(m => m.ConfirmPassword)
                @Html.Kendo().TextBoxFor(m => m.ConfirmPassword).HtmlAttributes(new { type = "password", @class = "form-control password", maxlength = "100" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>
            <div class="form-group col-xs-12 text-right paddingBottom20">
                @(Html.Kendo().Button().Name("submit").HtmlAttributes(new { id = "btnSubmit", type = "submit", @class = "pull-right" }).Content("Submit"))
            </div>
            <div class="form-group col-xs-12 text-center paddingBottom20" id="messageContainer">
                @if (!ViewData.ModelState.IsValid)
                {
                    <span>
                        @Html.ValidationMessage("Unauthorised", new { id = "validationMessage" })
                    </span>
                }
            </div>
            <div class="form-group col-xs-12 loginFormFooter">
                @Html.ActionLink("Click here", "Login", "Account", null, new { Area = string.Empty, @class = "BlueNavy bold" }) to Login
            </div>
        }

    </section>
</div>

<script type="text/javascript">
    $(function () {

        $(".loginForm").slideDown("fast");
        $("#messageContainer span").delay(20000).fadeOut("slow", function () { $(this).remove(); });

        $("#btnSubmit").on("click", function (e) {
            e.preventDefault();
            debugger;
            $("#resetForm").validate();

            if ($("#resetForm").valid()) {
                var formData = JSON.stringify($("#resetForm").serializeObject());
                var response = ProcessAjaxRequest(PageNavigationUrl.Account.ResetPassword, HttpRequestMethod.POST, HttpRequestDataType.HTML, HttpRequestContentType.JSON, formData, null);

                if (response) {
                    if ($(response).find("#ResetPassword").length > 0) {
                        $("#ResetPasswordContainer").empty().html($(response).find("#ResetPassword"));

                        $.validator.unobtrusive.parse($("#resetForm"));
                        $("#resetForm").validate(); // start validating

                        $("#ResetPassword #messageContainer").find("span").delay(20000).fadeOut("slow", function () { $(this).remove(); });
                    }
                    else {
                        $("#ResetPasswordContainer").empty().html(response);
                        $("#Confirm").slideDown("fast");
                    }
                }
            }
        });
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}